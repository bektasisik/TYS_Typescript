(()=>{"use strict";var t={300:(t,e)=>{var n=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==n)return n;throw new Error("unable to locate global object")}();t.exports=e=n.fetch,n.fetch&&(e.default=n.fetch.bind(n)),e.Headers=n.Headers,e.Request=n.Request,e.Response=n.Response},674:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Attendance=void 0,e.Attendance=class{constructor(t,e){this.date=new Date,this.today=this.date.getDate()+"/"+(this.date.getMonth()+1)+"/"+this.date.getFullYear()+" "+this.date.getHours()+":"+this.date.getMinutes()+":"+this.date.getSeconds(),this.id=t,this.prayerTime=e}showInfoAttendance(){console.log(this.id+" "+this.prayerTime+" "+this.today)}}},406:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Student=void 0,e.Student=class{constructor(t,e,n){this.id=t,this.name=e,this.surname=n,this.absent=0}increaseAbsent(){this.absent=this.absent+1}setName(t){this.name=t}setSurname(t){this.surname=t}showInfoStudent(){console.log(this.name+" "+this.surname+" "+this.absent)}}},669:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.StudentAttendance=void 0,e.StudentAttendance=class{constructor(t,e,n){this.student=t,this.attendance=e,this.isAbsence=n}getAttendance(){return this.attendance}getStudent(){return this.student}getIsAbsenceToString(t){return t?"Var":"Yok"}showInfoStudentAttendance(){console.log(this.student+" "+this.attendance+" "+this.getIsAbsenceToString)}}},607:function(t,e,n){var s=this&&this.__awaiter||function(t,e,n,s){return new(n||(n=Promise))((function(i,d){function o(t){try{r(s.next(t))}catch(t){d(t)}}function a(t){try{r(s.throw(t))}catch(t){d(t)}}function r(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,a)}r((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const i=n(287),d=n(711),o=new i.StudentService,a=new d.AttendanceService,r=document.getElementById("addStudentButton"),u=document.getElementById("updateStudentButton"),c=document.getElementById("takeAttendanceButton"),l=document.getElementById("nameInput"),h=document.getElementById("surnameInput"),p=document.getElementById("selectPrayerTime"),m=document.getElementsByName("selectAbsence"),f=(document.getElementById("selectListWithAttendanceId"),document.getElementById("mySelectStudentId"),document.getElementById("studentListBody")),y=document.getElementById("takeAttendanceBody");let v;function g(){!function(){s(this,void 0,void 0,(function*(){f.innerHTML="",(yield o.getStudents()).forEach((t=>{const e=document.createElement("tr"),n=document.createElement("td"),s=document.createElement("td"),i=document.createElement("td"),d=document.createElement("td"),a=document.createElement("td"),c=document.createElement("td"),p=document.createElement("td"),m=document.createElement("button"),y=document.createElement("button");n.innerHTML=t.id.toString(),s.innerText=t.name,i.innerText=t.surname,d.innerText=t.absent.toString(),m.setAttribute("class","btn btn-danger"),m.setAttribute("id","deleteButton"),m.setAttribute("data-id",t.id.toString()),m.innerHTML='<i class="fas fa-trash-alt"></i>',y.setAttribute("class","btn btn-primary"),y.setAttribute("id","updateButton"),y.setAttribute("data-id",t.id.toString()),y.innerHTML='<i class="fa-solid fa-edit"></i>',a.appendChild(m),c.appendChild(y),e.appendChild(n),e.appendChild(s),e.appendChild(i),e.appendChild(d),p.appendChild(a),p.appendChild(c),p.setAttribute("class","d-flex justify-content-around"),e.appendChild(p),f.appendChild(e),m.addEventListener("click",(()=>{console.log("Silme"),o.deleteStudent(Number(m.dataset.id)),g()})),y.addEventListener("click",(()=>{v=t,l.value=v.name,h.value=v.surname,r.style.display="none",u.style.display="block",u.setAttribute("data-id",v.id.toString())}))}))}))}(),function(){s(this,void 0,void 0,(function*(){y.innerHTML="",(yield o.getStudents()).forEach((t=>{const e=document.createElement("tr"),n=document.createElement("td"),s=document.createElement("td"),i=document.createElement("td"),d=document.createElement("td"),o=document.createElement("select"),a=document.createElement("option"),r=document.createElement("option");n.innerHTML=t.id.toString(),s.innerText=t.name,i.innerText=t.surname,o.setAttribute("class","form-select"),o.setAttribute("name","selectAbsence"),o.setAttribute("aria-label","select example"),a.setAttribute("value","+"),r.setAttribute("value","-"),a.innerText="+",r.innerText="-",o.appendChild(a),o.appendChild(r),d.appendChild(o),e.appendChild(n),e.appendChild(s),e.appendChild(i),e.appendChild(d),y.appendChild(e)}))}))}()}document.getElementById("tbodyListForAttendance"),g(),r.addEventListener("click",(t=>s(void 0,void 0,void 0,(function*(){t.preventDefault(),console.log("Ekleme"),yield o.addStudent(l.value,h.value),l.value="",h.value="",g()})))),u.addEventListener("click",(t=>s(void 0,void 0,void 0,(function*(){console.log("Güncelleme"),yield o.updateStudent(v.id,l.value,h.value),l.value="",h.value="",g(),r.style.display="block",u.style.display="none",t.preventDefault()})))),c.addEventListener("click",(t=>s(void 0,void 0,void 0,(function*(){console.log("Yoklama alma");const e=new Map;(yield o.getStudents()).forEach(((t,n)=>{e.set(t,"+"===m[n].value)})),a.takeAttendance(p.value,e),console.log(a.getAttendanceList()),g(),function(){const t=a.getAttendanceList(),e=document.getElementById("selectListWithAttendanceId");e.innerHTML="";const n=document.createElement("option");n.setAttribute("disabled","disabled"),n.innerText="Lütfen Listelemek İstedğiniz Vakti Seçiniz...",e.appendChild(n),t.forEach((t=>{const n=document.createElement("option");n.setAttribute("value",t.id.toString()),n.innerText=t.today+" "+t.prayerTime,e.appendChild(n)}))}(),t.preventDefault()}))))},711:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.AttendanceService=void 0;const s=n(674),i=n(669);e.AttendanceService=class{constructor(){this.attendances=[],this.studentAttendances=[],this.sequence=1}getAttendanceList(){return this.attendances}getAttendance(t){return this.attendances.filter((e=>e.id===t))[0]}getStudentAttendances(){return this.studentAttendances}getAttendancesByAttendanceId(t){return this.studentAttendances.filter((e=>e.getAttendance().id===t))}getAttendancesByStudentId(t){return this.studentAttendances.filter((e=>e.getStudent().id===t))}takeAttendance(t,e){const n=new s.Attendance(this.sequence++,t);this.attendances.push(n),e.forEach(((t,e)=>{const s=new i.StudentAttendance(e,n,t);t||e.increaseAbsent(),this.studentAttendances.push(s)}))}}},287:function(t,e,n){var s=this&&this.__awaiter||function(t,e,n,s){return new(n||(n=Promise))((function(i,d){function o(t){try{r(s.next(t))}catch(t){d(t)}}function a(t){try{r(s.throw(t))}catch(t){d(t)}}function r(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,a)}r((s=s.apply(t,e||[])).next())}))},i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.StudentService=void 0;const d=n(406),o=i(n(300));var a="http://localhost:3002/api/v1";e.StudentService=class{constructor(){this._students=[],this._sequence=0,this.fetchStudents()}fetchStudents(){return s(this,void 0,void 0,(function*(){const t=yield(0,o.default)(a+"/students",{method:"GET",headers:{Accept:"application/json"}});if(!t.ok)throw new Error(`Error! status: ${t.status}`);const e=yield t.json();return this._students=JSON.parse(JSON.stringify(e)),this._students}))}getStudents(){return this._students}increaseAbsent(t){return s(this,void 0,void 0,(function*(){const e=yield(0,o.default)(a+"/students/"+t+"/absent",{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:t,absen:1})});if(!e.ok)throw new Error(e.statusText);const n=yield e.json();console.log("result is: ",JSON.stringify(n));const s=this.getStudent(t);s&&(s.absent=n.absent)}))}addStudent(t,e){return s(this,void 0,void 0,(function*(){const n=yield(0,o.default)(a+"/students/"+this._sequence+"/"+t+"/"+e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:this._sequence++,name:t,surname:e,absent:0})});if(!n.ok)throw new Error(`Error! status: ${n.status}`);const s=yield n.json();console.log("result is: ",JSON.stringify(s));const i=new d.Student(this._sequence,t,e);this._students.push(i)}))}addStudentWithId(t,e,n){return s(this,void 0,void 0,(function*(){const s=yield(0,o.default)(a+"/students/"+t+"/"+e+"/"+n,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:t,name:e,surname:n,absent:0})});if(!s.ok)throw new Error(`Error! status: ${s.status}`);const i=yield s.json();console.log("result is: ",JSON.stringify(i));const r=new d.Student(t,e,n);this._students.push(r)}))}getStudent(t){return window.fetch(a+"/students/"+t,{method:"GET"}).then((t=>t.json())).then((t=>{console.log(t)})),this._students.find((e=>e.id===t))}getStudentById(t){return this._students.find((e=>e.id===t))}updateStudent(t,e,n){return s(this,void 0,void 0,(function*(){const s=yield(0,o.default)(a+"/students/"+t+"/"+e+"/"+n,{method:"PUT",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({id:t,name:e,surname:n})});if(!s.ok)throw new Error(`Error! status: ${s.status}`);const i=yield s.json();console.log("result is: ",JSON.stringify(i));const d=this.getStudent(t);d&&(d.setName(e),d.setSurname(n))}))}updateStudentWithId(t,e,n){return s(this,void 0,void 0,(function*(){const s=yield(0,o.default)(a+"/students/"+t+"/"+e+"/"+n,{method:"PUT",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({id:t,name:e,surname:n})});if(!s.ok)throw new Error(`Error! status: ${s.status}`);const i=yield s.json();console.log("result is: ",JSON.stringify(i));const d=this.getStudent(t);d&&(d.setName(e),d.setSurname(n))}))}deleteStudent(t){return s(this,void 0,void 0,(function*(){const e=yield(0,o.default)(a+"/students/"+t,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json"}});if(!e.ok)throw new Error(`Error! status: ${e.status}`);const n=yield e.json();console.log("result is: ",JSON.stringify(n));const s=this._students.filter((e=>e.id!==t));this._students=s}))}deleteStudentWithId(t){return s(this,void 0,void 0,(function*(){const e=yield(0,o.default)(a+"/students/"+t,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json"}});if(!e.ok)throw new Error(`Error! status: ${e.status}`);const n=yield e.json();console.log("result is: ",JSON.stringify(n));const s=this._students.filter((e=>e.id!==t));this._students=s}))}}}},e={};!function n(s){var i=e[s];if(void 0!==i)return i.exports;var d=e[s]={exports:{}};return t[s].call(d.exports,d,d.exports,n),d.exports}(607)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
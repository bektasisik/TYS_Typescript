(()=>{"use strict";var t={300:(t,e)=>{var n=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==n)return n;throw new Error("unable to locate global object")}();t.exports=e=n.fetch,n.fetch&&(e.default=n.fetch.bind(n)),e.Headers=n.Headers,e.Request=n.Request,e.Response=n.Response},674:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Attendance=void 0,e.Attendance=class{constructor(t,e){this.date=new Date,this.today=this.date.getDate()+"/"+(this.date.getMonth()+1)+"/"+this.date.getFullYear()+" "+this.date.getHours()+":"+this.date.getMinutes()+":"+this.date.getSeconds(),this.id=t,this.prayerTime=e}showInfoAttendance(){console.log(this.id+" "+this.prayerTime+" "+this.today)}}},669:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.StudentAttendance=void 0,e.StudentAttendance=class{constructor(t,e,n){this.student=t,this.attendance=e,this.isAbsence=n}getAttendance(){return this.attendance}getStudent(){return this.student}getIsAbsenceToString(t){return t?"Var":"Yok"}showInfoStudentAttendance(){console.log(this.student+" "+this.attendance+" "+this.getIsAbsenceToString)}}},607:function(t,e,n){var d=this&&this.__awaiter||function(t,e,n,d){return new(n||(n=Promise))((function(i,s){function o(t){try{r(d.next(t))}catch(t){s(t)}}function a(t){try{r(d.throw(t))}catch(t){s(t)}}function r(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,a)}r((d=d.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const i=n(287),s=n(711),o=new i.StudentService,a=new s.AttendanceService,r=document.getElementById("addStudentButton"),c=document.getElementById("updateStudentButton"),u=document.getElementById("takeAttendanceButton"),l=document.getElementById("nameInput"),h=document.getElementById("surnameInput"),p=document.getElementById("selectPrayerTime"),m=document.getElementsByName("selectAbsence"),f=(document.getElementById("selectListWithAttendanceId"),document.getElementById("mySelectStudentId"),document.getElementById("studentListBody")),v=document.getElementById("takeAttendanceBody");let y;function g(){!function(){d(this,void 0,void 0,(function*(){f.innerHTML="",(yield o.getStudents()).forEach((t=>{const e=document.createElement("tr"),n=document.createElement("td"),d=document.createElement("td"),i=document.createElement("td"),s=document.createElement("td"),a=document.createElement("td"),u=document.createElement("td"),p=document.createElement("td"),m=document.createElement("button"),v=document.createElement("button");n.innerHTML=t.id.toString(),d.innerText=t.name,i.innerText=t.surname,s.innerText=t.absent.toString(),m.setAttribute("class","btn btn-danger"),m.setAttribute("id","deleteButton"),m.setAttribute("data-id",t.id.toString()),m.innerHTML='<i class="fas fa-trash-alt"></i>',v.setAttribute("class","btn btn-primary"),v.setAttribute("id","updateButton"),v.setAttribute("data-id",t.id.toString()),v.innerHTML='<i class="fa-solid fa-edit"></i>',a.appendChild(m),u.appendChild(v),e.appendChild(n),e.appendChild(d),e.appendChild(i),e.appendChild(s),p.appendChild(a),p.appendChild(u),p.setAttribute("class","d-flex justify-content-around"),e.appendChild(p),f.appendChild(e),m.addEventListener("click",(()=>{o.deleteStudent(Number(m.dataset.id)),g()})),v.addEventListener("click",(()=>{y=t,l.value=y.name,h.value=y.surname,r.style.display="none",c.style.display="block",c.setAttribute("data-id",y.id.toString())}))}))}))}(),function(){d(this,void 0,void 0,(function*(){v.innerHTML="",(yield o.getStudents()).forEach((t=>{const e=document.createElement("tr"),n=document.createElement("td"),d=document.createElement("td"),i=document.createElement("td"),s=document.createElement("td"),o=document.createElement("select"),a=document.createElement("option"),r=document.createElement("option");n.innerHTML=t.id.toString(),d.innerText=t.name,i.innerText=t.surname,o.setAttribute("class","form-select"),o.setAttribute("name","selectAbsence"),o.setAttribute("aria-label","select example"),a.setAttribute("value","+"),r.setAttribute("value","-"),a.innerText="+",r.innerText="-",o.appendChild(a),o.appendChild(r),s.appendChild(o),e.appendChild(n),e.appendChild(d),e.appendChild(i),e.appendChild(s),v.appendChild(e)}))}))}()}document.getElementById("tbodyListForAttendance"),g(),r.addEventListener("click",(t=>d(void 0,void 0,void 0,(function*(){console.log("Ekleme"),yield o.addStudent(l.value,h.value),l.value="",h.value="",g(),t.preventDefault()})))),c.addEventListener("click",(t=>d(void 0,void 0,void 0,(function*(){yield o.updateStudent(y.id,l.value,h.value),l.value="",h.value="",g(),r.style.display="block",c.style.display="none",t.preventDefault()})))),u.addEventListener("click",(t=>d(void 0,void 0,void 0,(function*(){const e=new Map;(yield o.getStudents()).forEach(((t,n)=>{e.set(t,"+"===m[n].value)})),a.takeAttendance(p.value,e),console.log(a.getAttendanceList()),g(),function(){const t=a.getAttendanceList(),e=document.getElementById("selectListWithAttendanceId");e.innerHTML="";const n=document.createElement("option");n.setAttribute("disabled","disabled"),n.innerText="Lütfen Listelemek İstedğiniz Vakti Seçiniz...",e.appendChild(n),t.forEach((t=>{const n=document.createElement("option");n.setAttribute("value",t.id.toString()),n.innerText=t.today+" "+t.prayerTime,e.appendChild(n)}))}(),t.preventDefault()}))))},711:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.AttendanceService=void 0;const d=n(674),i=n(669);e.AttendanceService=class{constructor(){this.attendances=[],this.studentAttendances=[],this.sequence=1}getAttendanceList(){return this.attendances}getAttendance(t){return this.attendances.filter((e=>e.id===t))[0]}getStudentAttendances(){return this.studentAttendances}getAttendancesByAttendanceId(t){return this.studentAttendances.filter((e=>e.getAttendance().id===t))}getAttendancesByStudentId(t){return this.studentAttendances.filter((e=>e.getStudent().id===t))}takeAttendance(t,e){const n=new d.Attendance(this.sequence++,t);this.attendances.push(n),e.forEach(((t,e)=>{const d=new i.StudentAttendance(e,n,t);t||e.increaseAbsent(),this.studentAttendances.push(d)}))}}},287:function(t,e,n){var d=this&&this.__awaiter||function(t,e,n,d){return new(n||(n=Promise))((function(i,s){function o(t){try{r(d.next(t))}catch(t){s(t)}}function a(t){try{r(d.throw(t))}catch(t){s(t)}}function r(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,a)}r((d=d.apply(t,e||[])).next())}))},i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.StudentService=void 0;const s=i(n(300));var o="http://localhost:3002/api/v1";e.StudentService=class{constructor(){this._students=[],this._sequence=1,this.getStudents()}getStudents(){return d(this,void 0,void 0,(function*(){const t=yield(0,s.default)(o+"/students",{method:"GET",headers:{Accept:"application/json"}});if(!t.ok)throw new Error(`Error! status: ${t.status}`);const e=yield t.json(),n=JSON.parse(JSON.stringify(e,null,4));return this._students=n,console.log(e),this._students}))}addStudent(t,e){return d(this,void 0,void 0,(function*(){const n=yield(0,s.default)(o+"/students",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:t,surname:e})});if(!n.ok)throw new Error(`Error! status: ${n.status}`);const d=yield n.json();return console.log("result is: ",JSON.stringify(d,null,4)),d}))}getStudent(t){return window.fetch(o+"students"+t,{method:"GET"}).then((t=>t.json())).then((t=>{console.log(t)})),this._students.find((e=>e.id===t))}updateStudent(t,e,n){return d(this,void 0,void 0,(function*(){const d=yield(0,s.default)(o+"/students/"+t,{method:"PUT",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({id:t,name:e,surname:n})});if(!d.ok)throw new Error(`Error! status: ${d.status}`);const i=yield d.json();console.log("result is: ",JSON.stringify(i,null,4))}))}deleteStudent(t){return d(this,void 0,void 0,(function*(){const t=yield(0,s.default)(o+"/students/1",{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json"}});if(!t.ok)throw new Error(`Error! status: ${t.status}`);const e=yield t.json();console.log("result is: ",JSON.stringify(e,null,4))}))}}}},e={};!function n(d){var i=e[d];if(void 0!==i)return i.exports;var s=e[d]={exports:{}};return t[d].call(s.exports,s,s.exports,n),s.exports}(607)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,